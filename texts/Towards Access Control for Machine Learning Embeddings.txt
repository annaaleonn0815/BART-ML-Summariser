Embeddings, such as graph embeddings, are commonly used to transform complex structures into suitable inputs for machine-learning algorithms. However, obtaining embeddings can take hours for large inputs, making them unsuitable for on-the-fly generation. In this work, we outline our considerations for making embeddings shareable so that they can be periodically generated and released to the public. To provide self-contained access control over an embeddingâ€™s data, we apply attribute-based encryption. In the context of our funded research project CRYPTO4GRAPH-AI, we explore the potential applicability of this scheme to distribute insights about supply chains. We present our ABE-based protection pipeline for shareable ML embeddings, assuming a knowledge owner controls a large knowledge base with sensitive information. The knowledge owner may need to share insights with a larger audience through ML embeddings, but not all recipients should have full access to these insights due to computational costs. For instance, obtaining higher-dimension graph embeddings for large input graphs can be time-consuming, even after optimization. Therefore, the knowledge owner aims to compute the embedding once and protect its components against unauthorized access before publication. The pipeline involves obtaining the embedding from a large graph G = (V, E) with node and edge labels, where the graph can represent a knowledge graph. The knowledge owner might use algorithms like node2vec on subgraphs of G, evolving over time, and produce embeddings as vectors x_i in R^d for each node v_i in V. These vectors might be augmented with additional data components D_i to selectively annotate embedding points, yielding mappings like v_i -> (x_i, y_i, D_i) for each node v_i. Next, the knowledge owner protects the embedding using ciphertext-policy attribute-based encryption (CP-ABE), defining attributes and user assignments to establish fine-grained access policies. This allows only authorized users to access specific parts of the embedding, based on attributes like the Euclidean distance between vectors or by providing only a lower-dimensional view without full data access. Finally, after protecting the embedding, it can be released to the public. If attributes or assignments are generated dynamically, the knowledge owner must distribute the necessary keying material. Recipients register and provide a public key, allowing the knowledge owner to encrypt their key with their public key and attach these to the protected embedding. This ensures the embedding is self-contained and can be accessed by eligible recipients even if the knowledge owner is offline. This study outlines the potential for creating shareable machine-learning embeddings secured with attribute-based encryption before release, a concept we intend to explore further in our CRYPTO4GRAPH-AI project.
